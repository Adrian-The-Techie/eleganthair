# Generated by Django 3.0.8 on 2020-12-11 13:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllocationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_allocated', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('level', models.IntegerField(default=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=50, null=True)),
                ('shortcode', models.IntegerField(null=True)),
                ('username', models.CharField(max_length=50, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/thumbnail.png', upload_to='images/')),
                ('name', models.CharField(max_length=255)),
                ('selling_price', models.FloatField()),
                ('buying_price', models.FloatField()),
                ('quantity_in_stock', models.IntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
                ('category', models.ForeignKey(default=10, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Categories')),
            ],
        ),
        migrations.CreateModel(
            name='StockTakeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv_file', models.FileField(upload_to='documents/')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=70, null=True)),
                ('place_of_residence', models.CharField(max_length=70)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=1)),
                ('branch', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Branch')),
                ('emp_level', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.EmployeeLevel')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UpdateStockHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityupdated', models.IntegerField()),
                ('total_value_updated', models.IntegerField()),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChicFavs.Products')),
            ],
        ),
        migrations.CreateModel(
            name='SaleHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grand_total', models.FloatField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(max_length=150, null=True)),
                ('type_of_sale', models.IntegerField()),
                ('customer_phone_number', models.CharField(default='0700000000', max_length=255)),
                ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('payment_mode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.PaymentMode')),
            ],
        ),
        migrations.CreateModel(
            name='ItemsSoldPerSaleHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_sold', models.FloatField()),
                ('buying_price', models.FloatField()),
                ('price', models.FloatField()),
                ('sub_total', models.FloatField()),
                ('product_sold', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Products')),
                ('sale_history_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.SaleHistory')),
            ],
        ),
        migrations.CreateModel(
            name='ItemsAllocatedHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_allocated', models.FloatField()),
                ('allocation_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.AllocationHistory')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Products')),
            ],
        ),
        migrations.CreateModel(
            name='ItemsAllocated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_allocated', models.FloatField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(null=True)),
                ('visibility', models.BooleanField(default=True)),
                ('product_allocated', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Products')),
                ('product_allocated_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeLogins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_logged_in', models.BooleanField()),
                ('device_info', models.CharField(max_length=255, null=True)),
                ('time_logged_in', models.DateTimeField(auto_now_add=True, null=True)),
                ('time_logged_out', models.DateTimeField(null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AllocationSellingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_sold', models.IntegerField()),
                ('total_value_sold', models.IntegerField()),
                ('date_sold', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(max_length=150)),
                ('emp_id', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event_sold', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.Events')),
                ('payment_mode', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ChicFavs.PaymentMode')),
                ('product_sold', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChicFavs.Products')),
            ],
        ),
        migrations.AddField(
            model_name='allocationhistory',
            name='allocated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='allocationhistory',
            name='emp_allocated_to',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emp_allocated_to', to=settings.AUTH_USER_MODEL),
        ),
    ]
